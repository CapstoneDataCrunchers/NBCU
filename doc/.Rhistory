docs <- Corpus(VectorSource(corpus.list$snipets))
writeLines(as.character(docs[[sample(1:nrow(corpus.list), 1)]]))
docs <- Corpus(VectorSource(corpus.list$snipets))
writeLines(as.character(docs[[sample(1:nrow(corpus.list), 1)]]))
docs <- Corpus(VectorSource(corpus.list$snipets))
writeLines(as.character(docs[[sample(1:nrow(corpus.list), 1)]]))
docs <- Corpus(VectorSource(corpus.list$snipets))
writeLines(as.character(docs[[sample(1:nrow(corpus.list), 1)]]))
docs <- Corpus(VectorSource(corpus.list$snipets))
writeLines(as.character(docs[[sample(1:nrow(corpus.list), 1)]]))
docs <- Corpus(VectorSource(corpus.list$snipets))
writeLines(as.character(docs[[sample(1:nrow(corpus.list), 1)]]))
docs <- Corpus(VectorSource(corpus.list$snipets))
writeLines(as.character(docs[[sample(1:nrow(corpus.list), 1)]]))
docs <- Corpus(VectorSource(corpus.list$snipets))
writeLines(as.character(docs[[sample(1:nrow(corpus.list), 1)]]))
docs <- Corpus(VectorSource(corpus.list$snipets))
writeLines(as.character(docs[[sample(1:nrow(corpus.list), 1)]]))
heatmap.2(cor(sentence.list%>%filter(File=="rhonyc_801")%>%select(anger:trust)),
scale = "none",
col = bluered(100), , margin=c(6, 6), key=F,
trace = "none", density.info = "none")
par(mar=c(4, 6, 2, 1))
emo.means=colMeans(select(sentence.list, anger:trust)>0.01)
col.use=c("red2", "darkgoldenrod1",
"chartreuse3", "blueviolet",
"darkgoldenrod2", "dodgerblue3",
"darkgoldenrod1", "darkgoldenrod1")
barplot(emo.means[order(emo.means)], las=2, col=col.use[order(emo.means)], horiz=T, main="Inaugural Speeches")
presid.summary=tbl_df(sentence.list)%>%
filter(File%in%sel.comparison)%>%
#group_by(paste0(type, File))%>%
group_by(File)%>%
summarise(
anger=mean(anger),
anticipation=mean(anticipation),
disgust=mean(disgust),
fear=mean(fear),
joy=mean(joy),
sadness=mean(sadness),
surprise=mean(surprise),
trust=mean(trust)
#negative=mean(negative),
#positive=mean(positive)
)
presid.summary=as.data.frame(presid.summary)
rownames(presid.summary)=as.character((presid.summary[,1]))
km.res=kmeans(presid.summary[,-1], iter.max=200,
5)
fviz_cluster(km.res,
stand=F, repel= TRUE,
data = presid.summary[,-1], xlab="", xaxt="n",
show.clust.cent=FALSE)
presid.summary=tbl_df(sentence.list)%>%
filter(File%in%sel.comparison)%>%
#group_by(paste0(type, File))%>%
group_by(File)%>%
summarise(
anger=mean(anger),
anticipation=mean(anticipation),
disgust=mean(disgust),
fear=mean(fear),
joy=mean(joy),
sadness=mean(sadness),
surprise=mean(surprise),
trust=mean(trust)
#negative=mean(negative),
#positive=mean(positive)
)
presid.summary=as.data.frame(presid.summary)
rownames(presid.summary)=as.character((presid.summary[,1]))
km.res=kmeans(presid.summary[,-1], iter.max=200,
5)
fviz_cluster(km.res,
stand=F, repel= TRUE,
data = presid.summary[,-1], xlab="", xaxt="n",
show.clust.cent=FALSE)
presid.summary=tbl_df(sentence.list)%>%
filter(File%in%sel.comparison)%>%
#group_by(paste0(type, File))%>%
group_by(File)%>%
summarise(
anger=mean(anger),
anticipation=mean(anticipation),
disgust=mean(disgust),
fear=mean(fear),
joy=mean(joy),
sadness=mean(sadness),
surprise=mean(surprise),
trust=mean(trust)
#negative=mean(negative),
#positive=mean(positive)
)
presid.summary=as.data.frame(presid.summary)
rownames(presid.summary)=as.character((presid.summary[,1]))
km.res=kmeans(presid.summary[,-1], iter.max=200,
5)
fviz_cluster(km.res,
stand=F, repel= TRUE,
data = presid.summary[,-1], xlab="", xaxt="n",
show.clust.cent=FALSE)
presid.summary=tbl_df(sentence.list)%>%
filter(File%in%sel.comparison)%>%
#group_by(paste0(type, File))%>%
group_by(File)%>%
summarise(
anger=mean(anger),
anticipation=mean(anticipation),
disgust=mean(disgust),
fear=mean(fear),
joy=mean(joy),
sadness=mean(sadness),
surprise=mean(surprise),
trust=mean(trust)
#negative=mean(negative),
#positive=mean(positive)
)
presid.summary=as.data.frame(presid.summary)
rownames(presid.summary)=as.character((presid.summary[,1]))
km.res=kmeans(presid.summary[,-1], iter.max=200,
5)
fviz_cluster(km.res,
stand=F, repel= TRUE,
data = presid.summary[,-1], xlab="", xaxt="n",
show.clust.cent=FALSE)
corpus.list=sentence.list[2:(nrow(sentence.list)-1), ]
sentence.pre=sentence.list$sentences[1:(nrow(sentence.list)-2)]
sentence.post=sentence.list$sentences[3:(nrow(sentence.list)-1)]
corpus.list$snipets=paste(sentence.pre, corpus.list$sentences, sentence.post, sep=" ")
rm.rows=(1:nrow(corpus.list))[corpus.list$sent.id==1]
rm.rows=c(rm.rows, rm.rows-1)
corpus.list=corpus.list[-rm.rows, ]
?writeLines
#remove potentially problematic symbols
docs <-tm_map(docs,content_transformer(tolower))
writeLines(as.character(docs[[sample(1:nrow(corpus.list), 1)]]))
dtm <- DocumentTermMatrix(docs)
#convert rownames to filenames#convert rownames to filenames
rownames(dtm) <- paste(corpus.list$type, corpus.list$File,
corpus.list$Term, corpus.list$sent.id, sep="_")
rowTotals <- apply(dtm , 1, sum) #Find the sum of words in each Document
dtm  <- dtm[rowTotals> 0, ]
corpus.list=corpus.list[rowTotals>0, ]
corpus.list
corpus.list=sentence.list[2:(nrow(sentence.list)-1), ]
sentence.pre=sentence.list$sentences[1:(nrow(sentence.list)-2)]
sentence.post=sentence.list$sentences[3:(nrow(sentence.list)-1)]
corpus.list$snipets=paste(sentence.pre, corpus.list$sentences, sentence.post, sep=" ")
rm.rows=(1:nrow(corpus.list))[corpus.list$sent.id==1]
rm.rows=c(rm.rows, rm.rows-1)
corpus.list=corpus.list[-rm.rows, ]
sentence.list
corpus.list
corpus.list=sentence.list[2:(nrow(sentence.list)-1), ]
corpus.list
corpus.list=sentence.list[2:(nrow(sentence.list)-1), ]
sentence.pre=sentence.list$sentences[1:(nrow(sentence.list)-2)]
sentence.post=sentence.list$sentences[3:(nrow(sentence.list)-1)]
corpus.list$snipets=paste(sentence.pre, corpus.list$sentences, sentence.post, sep=" ")
rm.rows=(1:nrow(corpus.list))[corpus.list$sent.id==1]
rm.rows=c(rm.rows, rm.rows-1)
corpus.list=corpus.list[-rm.rows, ]
corpus.list
sentence.post
corpus.list
corpus.list
corpus.list
corpus.list=sentence.list[2:(nrow(sentence.list)-1), ]
corpus.list
corpus.list$snipets=paste(sentence.pre, corpus.list$sentences, sentence.post, sep=" ")
corpus.list
corpus.list
corpus.list=sentence.list[2:(nrow(sentence.list)-1), ]
corpus.list
sentence.pre=sentence.list$sentences[1:(nrow(sentence.list)-2)]
sentence.post=sentence.list$sentences[3:(nrow(sentence.list)-1)]
corpus.list$snipets=paste(sentence.pre, corpus.list$sentences, sentence.post, sep=" ")
rm.rows=(1:nrow(corpus.list))[corpus.list$sent.id==1]
rm.rows=c(rm.rows, rm.rows-1)
corpus.list
corpus.list=corpus.list[-rm.rows, ]
corpus.list
corpus.list=sentence.list[2:(nrow(sentence.list)-1), ]
sentence.pre=sentence.list$sentences[1:(nrow(sentence.list)-2)]
sentence.post=sentence.list$sentences[3:(nrow(sentence.list)-1)]
corpus.list$snipets=paste(sentence.pre, corpus.list$sentences, sentence.post, sep=" ")
rm.rows=(1:nrow(corpus.list))[corpus.list$sent.id==1]
rm.rows=c(rm.rows, rm.rows-1)
rm.rows
rm.rows
corpus.list=sentence.list[2:(nrow(sentence.list)-1), ]
sentence.pre=sentence.list$sentences[1:(nrow(sentence.list)-2)]
sentence.post=sentence.list$sentences[3:(nrow(sentence.list)-1)]
corpus.list$snipets=paste(sentence.pre, corpus.list$sentences, sentence.post, sep=" ")
#rm.rows=(1:nrow(corpus.list))[corpus.list$sent.id==1]
#rm.rows=c(rm.rows, rm.rows-1)
#corpus.list=corpus.list[-rm.rows, ]
docs <- Corpus(VectorSource(corpus.list$snipets))
writeLines(as.character(docs[[sample(1:nrow(corpus.list), 1)]]))
docs
#remove potentially problematic symbols
docs <-tm_map(docs,content_transformer(tolower))
writeLines(as.character(docs[[sample(1:nrow(corpus.list), 1)]]))
#remove punctuation
docs <- tm_map(docs, removePunctuation)
writeLines(as.character(docs[[sample(1:nrow(corpus.list), 1)]]))
#Strip digits
docs <- tm_map(docs, removeNumbers)
writeLines(as.character(docs[[sample(1:nrow(corpus.list), 1)]]))
#remove stopwords
docs <- tm_map(docs, removeWords, stopwords("english"))
writeLines(as.character(docs[[sample(1:nrow(corpus.list), 1)]]))
#remove whitespace
docs <- tm_map(docs, stripWhitespace)
writeLines(as.character(docs[[sample(1:nrow(corpus.list), 1)]]))
#Stem document
docs <- tm_map(docs,stemDocument)
writeLines(as.character(docs[[sample(1:nrow(corpus.list), 1)]]))
dtm <- DocumentTermMatrix(docs)
#convert rownames to filenames#convert rownames to filenames
rownames(dtm) <- paste(corpus.list$type, corpus.list$File,
corpus.list$Term, corpus.list$sent.id, sep="_")
rowTotals <- apply(dtm , 1, sum) #Find the sum of words in each Document
dtm  <- dtm[rowTotals> 0, ]
corpus.list=corpus.list[rowTotals>0, ]
#Set parameters for Gibbs sampling
burnin <- 4000
iter <- 2000
thin <- 500
seed <-list(2003,5,63,100001,765)
nstart <- 5
best <- TRUE
#Number of topics
k <- 15
#Run LDA using Gibbs sampling
ldaOut <-LDA(dtm, k, method="Gibbs", control=list(nstart=nstart,
seed = seed, best=best,
burnin = burnin, iter = iter,
thin=thin))
#write out results
#docs to topics
ldaOut.topics <- as.matrix(topics(ldaOut))
table(c(1:k, ldaOut.topics))
write.csv(ldaOut.topics,file=paste("../out/LDAGibbs",k,"DocsToTopics.csv"))
#top 6 terms in each topic
ldaOut.terms <- as.matrix(terms(ldaOut,20))
write.csv(ldaOut.terms,file=paste("../out/LDAGibbs",k,"TopicsToTerms.csv"))
#probabilities associated with each topic assignment
topicProbabilities <- as.data.frame(ldaOut@gamma)
write.csv(topicProbabilities,file=paste("../out/LDAGibbs",k,"TopicProbabilities.csv"))
terms.beta=ldaOut@beta
terms.beta=scale(terms.beta)
topics.terms=NULL
for(i in 1:k){
topics.terms=rbind(topics.terms, ldaOut@terms[order(terms.beta[i,], decreasing = TRUE)[1:7]])
}
topics.terms
ldaOut.terms
topics.hash=c("Topic 1", "Topic 2", "Topic 3", "Topic 4", "Topic 5", "Topic 6", "Topic 7", "Topic 8", "Topic 9", "Topic 10", "Topic 11", "Topic 12", "Topic 13", "Topic 14", "Topic 15")
corpus.list$ldatopic=as.vector(ldaOut.topics)
corpus.list$ldahash=topics.hash[ldaOut.topics]
colnames(topicProbabilities)=topics.hash
corpus.list.df=cbind(corpus.list, topicProbabilities)
par(mar=c(1,1,1,1))
topic.summary=tbl_df(corpus.list.df)%>%
filter(type%in%c("nomin", "inaug"), File%in%sel.comparison)%>%
select(File, Economy:Legislation)%>%
group_by(File)%>%
summarise_each(funs(mean))
par(mar=c(1,1,1,1))
topic.summary=tbl_df(corpus.list.df)%>%
filter(File%in%sel.comparison)%>%
select(File, Topic 1:Topic 15)%>%
topics.hash=c("Topic1", "Topic2", "Topic3", "Topic4", "Topic5", "Topic6", "Topic7", "Topic8", "Topic9", "Topic10", "Topic11", "Topic12", "Topic13", "Topic14", "Topic15")
corpus.list$ldatopic=as.vector(ldaOut.topics)
corpus.list$ldahash=topics.hash[ldaOut.topics]
colnames(topicProbabilities)=topics.hash
corpus.list.df=cbind(corpus.list, topicProbabilities)
par(mar=c(1,1,1,1))
topic.summary=tbl_df(corpus.list.df)%>%
filter(File%in%sel.comparison)%>%
select(File, Topic1:Topic15)%>%
group_by(File)%>%
summarise_each(funs(mean))
topic.summary=as.data.frame(topic.summary)
rownames(topic.summary)=topic.summary[,1]
# [1] "Economy"         "America"         "Defense"         "Belief"
# [5] "Election"        "Patriotism"      "Unity"           "Government"
# [9] "Reform"          "Temporal"        "WorkingFamilies" "Freedom"
# [13] "Equality"        "Misc"            "Legislation"
topic.plot=c(1, 13, 9, 11, 8, 3, 7)
print(topics.hash[topic.plot])
heatmap.2(as.matrix(topic.summary[,topic.plot+1]),
scale = "column", key=F,
col = bluered(100),
cexRow = 0.9, cexCol = 0.9, margins = c(8, 8),
trace = "none", density.info = "none")
par(mfrow=c(5, 1), mar=c(1,1,2,0), bty="n", xaxt="n", yaxt="n")
topic.plot=c(1, 13, 9, 11, 8, 3, 7)
print(topics.hash[topic.plot])
show.df=tbl_df(corpus.list.df)%>%filter(File=="rhonyc_801")%>%select(sent.id, Topic1:Topic15)
show.df=as.matrix(show.df)
show.df[,-1]=replace(show.df[,-1], show.df[,-1]<1/15, 0.001)
show.df[,-1]=f.smooth.topic(x=show.df[,1], y=show.df[,-1])
plot.stacked(show.df[,1], show.df[,topic.plot+1],
xlab="Sentences", ylab="Topic share", main="rhonyc_801")
show.df=tbl_df(corpus.list.df)%>%filter(File=="rhonyc_802")%>%select(sent.id, Topic1:Topic15)
show.df=as.matrix(show.df)
show.df[,-1]=replace(show.df[,-1], show.df[,-1]<1/15, 0.001)
show.df[,-1]=f.smooth.topic(x=show.df[,1], y=show.df[,-1])
plot.stacked(show.df[,1], show.df[,topic.plot+1],
xlab="Sentences", ylab="Topic share", main="rhonyc_802")
par(mfrow=c(5, 1), mar=c(1,1,2,0), bty="n", xaxt="n", yaxt="n")
topic.plot=c(1, 13, 9, 11, 8, 3, 7)
print(topics.hash[topic.plot])
show.df=tbl_df(corpus.list.df)%>%filter(File=="rhonyc_801")%>%select(sent.id, Topic1:Topic15)
show.df=as.matrix(show.df)
show.df[,-1]=replace(show.df[,-1], show.df[,-1]<1/15, 0.001)
show.df[,-1]=f.smooth.topic(x=show.df[,1], y=show.df[,-1])
plot.stacked(show.df[,1], show.df[,topic.plot+1],
xlab="Sentences", ylab="Topic share", main="rhonyc_801")
show.df=tbl_df(corpus.list.df)%>%filter(File=="rhonyc_802")%>%select(sent.id, Topic1:Topic15)
show.df=as.matrix(show.df)
show.df[,-1]=replace(show.df[,-1], show.df[,-1]<1/15, 0.001)
show.df[,-1]=f.smooth.topic(x=show.df[,1], y=show.df[,-1])
plot.stacked(show.df[,1], show.df[,topic.plot+1],
xlab="Sentences", ylab="Topic share", main="rhonyc_802")
show.df=tbl_df(corpus.list.df)%>%filter(File=="rhonyc_803")%>%select(sent.id, Topic1:Topic15)
show.df=as.matrix(show.df)
show.df[,-1]=replace(show.df[,-1], show.df[,-1]<1/15, 0.001)
show.df[,-1]=f.smooth.topic(x=show.df[,1], y=show.df[,-1])
plot.stacked(show.df[,1], show.df[,topic.plot+1],
xlab="Sentences", ylab="Topic share", main="rhonyc_803")
show.df=tbl_df(corpus.list.df)%>%filter(File=="YSHR_01011H")%>%select(sent.id, Topic1:Topic15)
show.df=as.matrix(show.df)
show.df[,-1]=replace(show.df[,-1], show.df[,-1]<1/15, 0.001)
show.df[,-1]=f.smooth.topic(x=show.df[,1], y=show.df[,-1])
plot.stacked(show.df[,1], show.df[,topic.plot+1],
xlab="Sentences", ylab="Topic share", main="YSHR_01011H")
show.df=tbl_df(corpus.list.df)%>%filter(File=="YSHR_01012H")%>%select(sent.id, Topic1:Topic15)
show.df=as.matrix(show.df)
show.df[,-1]=replace(show.df[,-1], show.df[,-1]<1/15, 0.001)
show.df[,-1]=f.smooth.topic(x=show.df[,1], y=show.df[,-1])
plot.stacked(show.df[,1], show.df[,topic.plot+1],
xlab="Sentences", ylab="Topic share", main="YSHR_01012H")
show.df=tbl_df(corpus.list.df)%>%filter(File=="YSHR_01013H")%>%select(sent.id, Topic1:Topic15)
show.df=as.matrix(show.df)
show.df[,-1]=replace(show.df[,-1], show.df[,-1]<1/15, 0.001)
show.df[,-1]=f.smooth.topic(x=show.df[,1], y=show.df[,-1])
plot.stacked(show.df[,1], show.df[,topic.plot+1],
xlab="Sentences", ylab="Topic share", main="YSHR_01013H")
show.df=tbl_df(corpus.list.df)%>%filter(File=="GFG_EPS301")%>%select(sent.id, Topic1:Topic15)
show.df=as.matrix(show.df)
show.df[,-1]=replace(show.df[,-1], show.df[,-1]<1/15, 0.001)
show.df[,-1]=f.smooth.topic(x=show.df[,1], y=show.df[,-1])
plot.stacked(show.df[,1], show.df[,topic.plot+1],
xlab="Sentences", ylab="Topic share", main="GFG_EPS301")
show.df=tbl_df(corpus.list.df)%>%filter(File=="GFG_EPS302")%>%select(sent.id, Topic1:Topic15)
show.df=as.matrix(show.df)
show.df[,-1]=replace(show.df[,-1], show.df[,-1]<1/15, 0.001)
show.df[,-1]=f.smooth.topic(x=show.df[,1], y=show.df[,-1])
plot.stacked(show.df[,1], show.df[,topic.plot+1],
xlab="Sentences", ylab="Topic share", main="GFG_EPS302")
show.df=tbl_df(corpus.list.df)%>%filter(File=="GFG_EPS303")%>%select(sent.id, Topic1:Topic15)
show.df=as.matrix(show.df)
show.df[,-1]=replace(show.df[,-1], show.df[,-1]<1/15, 0.001)
show.df[,-1]=f.smooth.topic(x=show.df[,1], y=show.df[,-1])
plot.stacked(show.df[,1], show.df[,topic.plot+1],
xlab="Sentences", ylab="Topic share", main="GFG_EPS303")
par(mfrow=c(3,3), mar=c(1,1,2,0), bty="n", xaxt="n", yaxt="n")
topic.plot=c(1, 13, 9, 11, 8, 3, 7)
print(topics.hash[topic.plot])
show.df=tbl_df(corpus.list.df)%>%filter(File=="rhonyc_801")%>%select(sent.id, Topic1:Topic15)
show.df=as.matrix(show.df)
show.df[,-1]=replace(show.df[,-1], show.df[,-1]<1/15, 0.001)
show.df[,-1]=f.smooth.topic(x=show.df[,1], y=show.df[,-1])
plot.stacked(show.df[,1], show.df[,topic.plot+1],
xlab="Sentences", ylab="Topic share", main="rhonyc_801")
show.df=tbl_df(corpus.list.df)%>%filter(File=="rhonyc_802")%>%select(sent.id, Topic1:Topic15)
show.df=as.matrix(show.df)
show.df[,-1]=replace(show.df[,-1], show.df[,-1]<1/15, 0.001)
show.df[,-1]=f.smooth.topic(x=show.df[,1], y=show.df[,-1])
plot.stacked(show.df[,1], show.df[,topic.plot+1],
xlab="Sentences", ylab="Topic share", main="rhonyc_802")
show.df=tbl_df(corpus.list.df)%>%filter(File=="rhonyc_803")%>%select(sent.id, Topic1:Topic15)
show.df=as.matrix(show.df)
show.df[,-1]=replace(show.df[,-1], show.df[,-1]<1/15, 0.001)
show.df[,-1]=f.smooth.topic(x=show.df[,1], y=show.df[,-1])
plot.stacked(show.df[,1], show.df[,topic.plot+1],
xlab="Sentences", ylab="Topic share", main="rhonyc_803")
show.df=tbl_df(corpus.list.df)%>%filter(File=="YSHR_01011H")%>%select(sent.id, Topic1:Topic15)
show.df=as.matrix(show.df)
show.df[,-1]=replace(show.df[,-1], show.df[,-1]<1/15, 0.001)
show.df[,-1]=f.smooth.topic(x=show.df[,1], y=show.df[,-1])
plot.stacked(show.df[,1], show.df[,topic.plot+1],
xlab="Sentences", ylab="Topic share", main="YSHR_01011H")
show.df=tbl_df(corpus.list.df)%>%filter(File=="YSHR_01012H")%>%select(sent.id, Topic1:Topic15)
show.df=as.matrix(show.df)
show.df[,-1]=replace(show.df[,-1], show.df[,-1]<1/15, 0.001)
show.df[,-1]=f.smooth.topic(x=show.df[,1], y=show.df[,-1])
plot.stacked(show.df[,1], show.df[,topic.plot+1],
xlab="Sentences", ylab="Topic share", main="YSHR_01012H")
show.df=tbl_df(corpus.list.df)%>%filter(File=="YSHR_01013H")%>%select(sent.id, Topic1:Topic15)
show.df=as.matrix(show.df)
show.df[,-1]=replace(show.df[,-1], show.df[,-1]<1/15, 0.001)
show.df[,-1]=f.smooth.topic(x=show.df[,1], y=show.df[,-1])
plot.stacked(show.df[,1], show.df[,topic.plot+1],
xlab="Sentences", ylab="Topic share", main="YSHR_01013H")
show.df=tbl_df(corpus.list.df)%>%filter(File=="GFG_EPS301")%>%select(sent.id, Topic1:Topic15)
show.df=as.matrix(show.df)
show.df[,-1]=replace(show.df[,-1], show.df[,-1]<1/15, 0.001)
show.df[,-1]=f.smooth.topic(x=show.df[,1], y=show.df[,-1])
plot.stacked(show.df[,1], show.df[,topic.plot+1],
xlab="Sentences", ylab="Topic share", main="GFG_EPS301")
show.df=tbl_df(corpus.list.df)%>%filter(File=="GFG_EPS302")%>%select(sent.id, Topic1:Topic15)
show.df=as.matrix(show.df)
show.df[,-1]=replace(show.df[,-1], show.df[,-1]<1/15, 0.001)
show.df[,-1]=f.smooth.topic(x=show.df[,1], y=show.df[,-1])
plot.stacked(show.df[,1], show.df[,topic.plot+1],
xlab="Sentences", ylab="Topic share", main="GFG_EPS302")
show.df=tbl_df(corpus.list.df)%>%filter(File=="GFG_EPS303")%>%select(sent.id, Topic1:Topic15)
show.df=as.matrix(show.df)
show.df[,-1]=replace(show.df[,-1], show.df[,-1]<1/15, 0.001)
show.df[,-1]=f.smooth.topic(x=show.df[,1], y=show.df[,-1])
plot.stacked(show.df[,1], show.df[,topic.plot+1],
xlab="Sentences", ylab="Topic share", main="GFG_EPS303")
par(mfrow=c(9,1), mar=c(1,1,2,0), bty="n", xaxt="n", yaxt="n")
topic.plot=c(1, 13, 9, 11, 8, 3, 7)
print(topics.hash[topic.plot])
show.df=tbl_df(corpus.list.df)%>%filter(File=="rhonyc_801")%>%select(sent.id, Topic1:Topic15)
show.df=as.matrix(show.df)
show.df[,-1]=replace(show.df[,-1], show.df[,-1]<1/15, 0.001)
show.df[,-1]=f.smooth.topic(x=show.df[,1], y=show.df[,-1])
plot.stacked(show.df[,1], show.df[,topic.plot+1],
xlab="Sentences", ylab="Topic share", main="rhonyc_801")
show.df=tbl_df(corpus.list.df)%>%filter(File=="rhonyc_802")%>%select(sent.id, Topic1:Topic15)
show.df=as.matrix(show.df)
show.df[,-1]=replace(show.df[,-1], show.df[,-1]<1/15, 0.001)
show.df[,-1]=f.smooth.topic(x=show.df[,1], y=show.df[,-1])
plot.stacked(show.df[,1], show.df[,topic.plot+1],
xlab="Sentences", ylab="Topic share", main="rhonyc_802")
show.df=tbl_df(corpus.list.df)%>%filter(File=="rhonyc_803")%>%select(sent.id, Topic1:Topic15)
show.df=as.matrix(show.df)
show.df[,-1]=replace(show.df[,-1], show.df[,-1]<1/15, 0.001)
show.df[,-1]=f.smooth.topic(x=show.df[,1], y=show.df[,-1])
plot.stacked(show.df[,1], show.df[,topic.plot+1],
xlab="Sentences", ylab="Topic share", main="rhonyc_803")
show.df=tbl_df(corpus.list.df)%>%filter(File=="YSHR_01011H")%>%select(sent.id, Topic1:Topic15)
show.df=as.matrix(show.df)
show.df[,-1]=replace(show.df[,-1], show.df[,-1]<1/15, 0.001)
show.df[,-1]=f.smooth.topic(x=show.df[,1], y=show.df[,-1])
plot.stacked(show.df[,1], show.df[,topic.plot+1],
xlab="Sentences", ylab="Topic share", main="YSHR_01011H")
show.df=tbl_df(corpus.list.df)%>%filter(File=="YSHR_01012H")%>%select(sent.id, Topic1:Topic15)
show.df=as.matrix(show.df)
show.df[,-1]=replace(show.df[,-1], show.df[,-1]<1/15, 0.001)
show.df[,-1]=f.smooth.topic(x=show.df[,1], y=show.df[,-1])
plot.stacked(show.df[,1], show.df[,topic.plot+1],
xlab="Sentences", ylab="Topic share", main="YSHR_01012H")
show.df=tbl_df(corpus.list.df)%>%filter(File=="YSHR_01013H")%>%select(sent.id, Topic1:Topic15)
show.df=as.matrix(show.df)
show.df[,-1]=replace(show.df[,-1], show.df[,-1]<1/15, 0.001)
show.df[,-1]=f.smooth.topic(x=show.df[,1], y=show.df[,-1])
plot.stacked(show.df[,1], show.df[,topic.plot+1],
xlab="Sentences", ylab="Topic share", main="YSHR_01013H")
show.df=tbl_df(corpus.list.df)%>%filter(File=="GFG_EPS301")%>%select(sent.id, Topic1:Topic15)
show.df=as.matrix(show.df)
show.df[,-1]=replace(show.df[,-1], show.df[,-1]<1/15, 0.001)
show.df[,-1]=f.smooth.topic(x=show.df[,1], y=show.df[,-1])
plot.stacked(show.df[,1], show.df[,topic.plot+1],
xlab="Sentences", ylab="Topic share", main="GFG_EPS301")
show.df=tbl_df(corpus.list.df)%>%filter(File=="GFG_EPS302")%>%select(sent.id, Topic1:Topic15)
show.df=as.matrix(show.df)
show.df[,-1]=replace(show.df[,-1], show.df[,-1]<1/15, 0.001)
show.df[,-1]=f.smooth.topic(x=show.df[,1], y=show.df[,-1])
plot.stacked(show.df[,1], show.df[,topic.plot+1],
xlab="Sentences", ylab="Topic share", main="GFG_EPS302")
show.df=tbl_df(corpus.list.df)%>%filter(File=="GFG_EPS303")%>%select(sent.id, Topic1:Topic15)
show.df=as.matrix(show.df)
show.df[,-1]=replace(show.df[,-1], show.df[,-1]<1/15, 0.001)
show.df[,-1]=f.smooth.topic(x=show.df[,1], y=show.df[,-1])
plot.stacked(show.df[,1], show.df[,topic.plot+1],
xlab="Sentences", ylab="Topic share", main="GFG_EPS303")
show.df=tbl_df(corpus.list.df)%>%filter(word.count<60)%>%select(sentences, Topic1:Topic15)
as.character(show.df$sentences[apply(as.data.frame(show.df[,-1]), 2, which.max)])
names(show.df)[-1]
presid.summary=tbl_df(corpus.list.df)%>%
filter(File%in%sel.comparison)%>%
select(File, Topic1:Topic15)%>%
group_by(File)%>%
summarise_each(funs(mean))
presid.summary=as.data.frame(presid.summary)
rownames(presid.summary)=as.character((presid.summary[,1]))
km.res=kmeans(scale(presid.summary[,-1]), iter.max=200,
5)
fviz_cluster(km.res,
stand=T, repel= TRUE,
data = presid.summary[,-1],
show.clust.cent=FALSE)
presid.summary=tbl_df(corpus.list.df)%>%
filter(File%in%sel.comparison)%>%
select(File, Topic1:Topic15)%>%
group_by(File)%>%
summarise_each(funs(mean))
presid.summary=as.data.frame(presid.summary)
rownames(presid.summary)=as.character((presid.summary[,1]))
km.res=kmeans(scale(presid.summary[,-1]), iter.max=200,
5)
fviz_cluster(km.res,
stand=T, repel= TRUE,
data = presid.summary[,-1],
show.clust.cent=FALSE)
